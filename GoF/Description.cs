using System;
using System.Collections.Generic;
using System.Text;

namespace GoF
{
    class Description
    {
        /*
                                                            CreationalPatterns


        Factory Method:
        1. Коли створення об'єкта занадто об'ємну сильно роздувається конструктор, тому краще винести створення об'єкта в фабрику.
        2. Коли потрібно створити однотипні елементи із різними данними.

        • Когда заранее неизвестно, объекты каких типов необходимо создавать;
        • Когда система должна быть независимой от процесса создания новых объектов и расширяемой: в нее можно легко вводить новые классы, объекты которых система должна создавать;
        • Когда создание новых объектов необходимо делегировать из базового класса классам наследникам;



        Abstract Factory:
        1. Коли потрібно створити групу однотипних елементів із різними данними, які пов'язані між собою.
        
        • Когда система не должна зависеть от способа создания новых объектов
        • Когда создаваемые объекты должны использоваться вместе и являются взаимосвязанными


        Builder:
        1. Коли створення об'єкту занадто складне із багатьма if.
        
        • Когда процесс создания нового объекта не должен зависеть от того, из каких частей этот объект состоит и как эти части связаны между собой
        • Когда необходимо обеспечить получение различных вариаций объекта в процессе его создания



        Prototype:
        1. Коли створення копії об'єкта є доцільним.

        • Класс порождаемого объекта определяется в момент выполнения.
        • Когда желательно избежать наследования создателя объекта. В этом случае, Прототип является конкурентом Абстрактной фабрики.
        • Когда клонирование объекта является более предпочтительным вариантом нежели его создание и инициализация с помощью конструктора.
        • Когда создание копии объекта проще и быстрее, чем порождение его стандартным путем, используя операцию new и включая инициализацию полей.



        Singleton:
        1. Коли потрібен один об'єкт в системі




        */
    }
}
